{"version":3,"sources":["Component/Start.js","App.js","reportWebVitals.js","index.js"],"names":["Start","player","player1","player2","useState","win","setWin","className","Button","variant","size","color","onClick","Math","abs","App","setPlayer","game","setGame","onNameChange","e","target","name","value","autoComplete","onSubmit","preventDefault","submit","TextField","required","id","onChange","label","type","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wRAyDeA,EAlDD,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACLC,EAAoBD,EAApBC,QAASC,EAAWF,EAAXE,QACjB,EAAsBC,mBAAS,CAC3BF,QAAS,EACTC,QAAS,IAFb,mBAAOE,EAAP,KAAYC,EAAZ,KA4BA,OACI,oCACE,iCACE,sBAAKC,UAAU,QAAf,cACEL,EADF,OACc,cAACM,EAAA,EAAD,CAAQC,QAAQ,WAAWC,KAAK,QAAQC,MAAM,UAAWC,QAlBzD,WAClBN,EAAO,2BACAD,GADD,IAEFH,QAASG,EAAIH,QAAS,MAeR,sBADd,gBAC8HG,EAAIH,WAElI,sBAAKK,UAAU,QAAf,cACEJ,EADF,OACc,cAACK,EAAA,EAAD,CAAQC,QAAQ,WAAWC,KAAK,QAAQC,MAAM,UAAWC,QAdzD,WAClBN,EAAO,2BACAD,GADD,IAEFF,QAASE,EAAIF,QAAS,MAWR,sBADd,gBAC8HE,EAAIF,WAElI,8BACA,mDAAqB,kCAhCtBE,EAAIH,UAAYG,EAAIF,QAAgB,MACnCE,EAAIH,QAAUG,EAAIF,QACX,UAEA,UA4Bc,OAArB,IAA0C,uBAA1C,oBACkBU,KAAKC,IAAIT,EAAIH,QAAUG,EAAIF,cAE7C,cAACK,EAAA,EAAD,CAAQC,QAAQ,YAAYC,KAAK,SAASC,MAAM,UAAhD,yBCHGI,MA1Cf,WACE,MAA4BX,mBAAS,CACjCF,QAAS,GACTC,QAAS,KAFb,mBAAOF,EAAP,KAAee,EAAf,KAKA,EAAwBZ,oBAAS,GAAjC,mBAAOa,EAAP,KAAaC,EAAb,KAMMC,EAAe,SAACC,GAClBJ,EAAU,2BACHf,GADE,kBAEJmB,EAAEC,OAAOC,KAAQF,EAAEC,OAAOE,UAInC,OACE,sBAAKhB,UAAU,MAAf,UACKU,EAaU,KAbJ,cAAC,WAAD,UACP,oCACE,uBAAOO,aAAa,MAAMC,SAAU,SAAAL,GAAC,OAf9B,SAACA,GACZA,EAAEM,iBACFR,GAAQ,GAaqCS,CAAOP,IAAhD,UACA,8CACI,qBAAKb,UAAU,YAAf,SACI,cAACqB,EAAA,EAAD,CAAWC,UAAQ,EAACP,KAAK,UAAWQ,GAAG,oBAAoBC,SAAUZ,EAAca,MAAM,oBAE7F,qBAAKzB,UAAU,YAAf,SACI,cAACqB,EAAA,EAAD,CAAWC,UAAQ,EAACP,KAAK,UAAWQ,GAAG,oBAAoBC,SAAUZ,EAAca,MAAM,oBAE7F,uBAAOC,KAAK,SAASV,MAAM,oBAKjCN,EAAO,cAAC,EAAD,CAAOhB,OAAQA,IAAY,SC7B3BiC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b72da128.chunk.js","sourcesContent":["import React, { useState} from 'react';\r\nimport './Start.css';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\n\r\n\r\nconst Start = ({ player }) => {\r\n    const { player1, player2} = player\r\n    const [win, setWin] = useState({\r\n        player1: 0,\r\n        player2: 0\r\n    })\r\n\r\n    const winner = () => {\r\n        if(win.player1 === win.player2) return 'Tie'\r\n        if (win.player1 > win.player2) {\r\n            return 'Player1'\r\n        } else {\r\n            return 'Player2'            \r\n        }\r\n    }\r\n\r\n    const handleChange1 = () => {\r\n        setWin({\r\n            ...win,\r\n            player1: win.player1+ 1\r\n        })\r\n    }\r\n\r\n    const handleChange2 = () => {\r\n        setWin({\r\n            ...win,\r\n            player2: win.player2+ 1\r\n        })\r\n    }\r\n\r\n    return (\r\n        <container>\r\n          <main>\r\n            <div className=\"field\">\r\n            \"{player1}\" - <Button variant=\"outlined\" size=\"small\" color=\"primary\"  onClick={handleChange1}>Add Win </Button> ---- Wins = {win.player1}\r\n            </div>\r\n            <div className=\"field\">\r\n            \"{player2}\" - <Button variant=\"outlined\" size=\"small\" color=\"primary\"  onClick={handleChange2}>Add Win </Button> ---- Wins = {win.player2}  \r\n            </div>\r\n            <div>\r\n            <h4>Current Winner - <i>\"{ winner()}\"</i> <br/>\r\n            Win Difference - {Math.abs(win.player1 - win.player2)}</h4>\r\n            </div>\r\n            <Button variant=\"contained\" size=\"medium\" color=\"primary\">Save </Button>\r\n          </main>\r\n        </container>\r\n    )\r\n}\r\n\r\n\r\nexport default Start;","import {useState, Fragment} from 'react';\nimport './App.css';\nimport TextField from '@material-ui/core/TextField';\nimport Start from './Component/Start';\n\nfunction App() {\n  const [player, setPlayer] = useState({\n      player1: \"\",\n      player2: \"\"\n  })\n\n  const [game, setGame] = useState(false)\n\n  const submit = (e) => {\n      e.preventDefault();\n      setGame(true);\n  }\n  const onNameChange = (e) => {\n      setPlayer({\n          ...player,\n          [e.target.name] : e.target.value\n      })\n  }\n\n  return (\n    <div className=\"App\">\n      { !game? <Fragment>\n        <container >\n          <form  autoComplete=\"off\" onSubmit={e => submit(e)} >\n          <h2>Play Game...</h2>\n              <div className=\"TextField\">\n                  <TextField required name=\"player1\"  id=\"standard-required\" onChange={onNameChange} label=\"Player 1 Name\" />\n              </div>\n              <div className=\"TextField\">\n                  <TextField required name=\"player2\"  id=\"standard-required\" onChange={onNameChange} label=\"Player 2 Name\" />\n              </div>\n              <input type=\"submit\" value=\"continue\"/>\n          </form>\n        </container>\n      </Fragment>: null}\n\n      { game ? <Start player={player}/> : null }\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}